name: Nightly build

on:
  push:
    branch:
      - 'main'

env:
  CARGO_TERM_COLOR: always

jobs:

  build_ubuntu_x86-64:
    name: Publish binary builds for linux (x86-64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install rust 1.70.0
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.70.0
          override: true
      - name: install libusb-1.0
        run: sudo apt-get install libusb-1.0-0-dev
      - name: Download renamer
        run: curl -sSf https://raw.githubusercontent.com/memflow/memflowup/master/target_rename.sh > target_rename.sh
      - name: build
        run: cargo build --release --workspace --verbose --target x86_64-unknown-linux-gnu
      - name: Rename and collect artifacts
        id: artifacts
        run: echo "::set-output name=artifact::$(sh ./target_rename.sh "x86_64-unknown-linux-gnu" | head -n 1)"
      - name: Upload build artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly
          files: |
            ${{ steps.artifacts.outputs.artifact }}

  build_windows_x86-64:
    name: Publish binary builds for windows (x86-64)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Install rust 1.70.0
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.70.0
          override: true
      - name: Download renamer
        run: curl -sSf https://raw.githubusercontent.com/memflow/memflowup/master/target_rename.sh > target_rename.sh
      - name: build
        shell: bash
        run: cargo build --release --workspace --verbose --target x86_64-pc-windows-msvc
      - name: Rename and collect artifacts
        id: artifacts
        shell: bash
        run: echo "::set-output name=artifact::$(sh ./target_rename.sh "x86_64-pc-windows-msvc" | head -n 1)"
      - name: Upload build artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly
          files: |
            ${{ steps.artifacts.outputs.artifact }}
